#!/usr/local/node/bin/node

const { info } = require("../tools/colors");

class PostReceive {

    constructor (branch){
        this.warehourse = null;
        this.branch = branch;
    }

    __getWarehourseName (){
        let aPath = __filename.split("/");
        let index = aPath.findIndex( v => v === "hooks" );
        this.warehourse = aPath[index - 1];
    }

    exec (){
        this.__getWarehourseName();
        info("[info] push仓库名: %s, 分支: %s", this.warehourse, this.branch);
    }

}

{
    if ( !module.parents ){

        (async () => {

            // 获取push的分支
            // 可以一次push多个分支, 这里只处理了第一个
            process.stdin.setEncoding('utf8');
            const branch = await new Promise(resolve => {
                const chunks = [];
                process.stdin.on('readable', () => {
                    const chunk = process.stdin.read();
                    if (chunk !== null) {
                        chunks.push(chunk);
                    }
                });
    
                process.stdin.on('end', () => {
                    const arr = chunks.trim().split(" ");
                    resolve(arr[arr.length - 1]);
                });
            });

            const oPostReceive = new PostReceive(branch);
            oPostReceive.exec();

        })();
    }
}



