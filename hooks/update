#!/usr/local/node/bin/node

const { info, error } = require("../libs/colors");
const execSync = require("child_process").execSync;

/**
 *  @describe
 *      push代码时进行语法检测
 * 
 *      lint: 需要检查的文件类型
 *      ignore: 过滤，不需要进行检查的项目
 *      
 * 
 */


const git_gooks_env = "\
    export PATH=/usr/local/node/bin:/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin:/usr/local/bin \
    && unset GIT_DIR \
    && bash -c";

const lint = {
    ".js": {
        name: "eslint"
    }
}

const ignore = [];

const main = () => {

    console.log(process.argv);
    
    const [ , , branch, old_commit, new_commit ] = process.argv;

    const paths = process.cwd().split("/");
    const warehourse = paths[paths.length - 1].split(".git")[0];

    info("[info] 需要对项目 %s, 分支: %s 进行检查...", warehourse, branch);
    
    if (ignore.includes(warehourse)){
        return error("[warning] 项目 %s 不需要进行语法检测", warehourse);
    }

    console.log(__filename, process.cwd());
    console.log(222, execSync(`${git_gooks_env} 'git diff --name-only --diff-filter=d ${old_commit} ${new_commit}'`).toString());


};

// dad6b772b011f584e18bcf8949f49d45b4a730b2
// a75d5fdafc065f8561f6815ce45c3831cf39478d

// git diff dad6b772b011f584e18bcf8949f49d45b4a730b2 a75d5fdafc065f8561f6815ce45c3831cf39478d

{
    if ( !module.parents ){

        (() => {
            try {
                main();
            } catch(err){
                error("[error] 发生了错误", err.toString());
            }

        })();

    }
}
